app-template:
  defaultPodOptions:
    securityContext:
      fsGroup: 1000
  controllers:
    server:
      type: deployment
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-server
            tag: v1.99.0
          env:
            DB_DATABASE_NAME: immich
            DB_HOSTNAME: postgres
            DB_PORT: 5432
            DB_USERNAME: immich
            DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: immich.postgres
                  key: POSTGRES_PASSWORD
            REDIS_HOSTNAME: redis
            REDIS_PORT: 6379
            IMMICH_MACHINE_LEARNING_URL: http://machine-learning:3003
            IMMICH_MICROSERVICES_URL: http://microservices:3002
    microservices:
      type: deployment
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-server
            tag: v1.99.0
          args:
            - microservices
          env:
            DB_DATABASE_NAME: immich
            DB_HOSTNAME: postgres
            DB_PORT: 5432
            DB_USERNAME: immich
            DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: immich.postgres
                  key: POSTGRES_PASSWORD
            REDIS_HOSTNAME: redis
            REDIS_PORT: 6379
            IMMICH_MACHINE_LEARNING_URL: http://machine-learning:3003
    machine-learning:
      type: deployment
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-machine-learning
            tag: v1.99.0
          env:
            CPU_WORKER_COUNT: "2"
    web:
      type: deployment
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-web
            tag: v1.99.0
    redis:
      type: deployment
      containers:
        main:
          image:
            repository: redis
            tag: 7.2.4-alpine
    postgres:
      type: statefulset
      containers:
        main:
          image:
            repository: postgres
            tag: 15.5-alpine
          env:
            POSTGRES_USER: immich
            POSTGRES_DB: immich
            POSTGRES_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: immich.postgres
                  key: POSTGRES_PASSWORD
            PGDATA: /var/lib/postgresql/data/pgdata
  service:
    server:
      controller: server
      ports:
        http:
          port: 3001
          protocol: HTTP
    microservices:
      controller: microservices
      ports:
        http:
          port: 3002
          protocol: HTTP
    machine-learning:
      controller: machine-learning
      ports:
        http:
          port: 3003
          protocol: HTTP
    postgres:
      controller: postgres
      ports:
        postgres:
          port: 5432
          protocol: TCP
    redis:
      controller: redis
      ports:
        redis:
          port: 6379
          protocol: TCP
    web:
      controller: web
      ports:
        http:
          port: 3000
          protocol: HTTP
  ingress:
    server:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host photos.epx.pub
          paths:
            - path: /api
              pathType: Prefix
              service:
                name: server
                port: http
            - path: /
              pathType: Prefix
              service:
                name: web
                port: http
      tls:
        - hosts:
            - *host
          secretName: immich-tls-certificate
  persistence:
    library:
      enabled: true
      storageClass: zfs-nfs
      accessMode: ReadWriteMany
      size: 100Gi
      globalMounts:
        - path: /usr/src/app/upload
    postgres-data:
      enabled: true
      storageClass: zfs-nfs
      accessMode: ReadWriteMany
      size: 100Gi
      advancedMounts:
        postgres:
          main:
            - path: /var/lib/postgresql/data
  rawResources:
    secret:
      apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: immich.postgres
      spec:
        secretStoreRef:
          kind: ClusterSecretStore
          name: global-secrets
        data:
          - secretKey: POSTGRES_PASSWORD
            remoteRef:
              key: immich.postgres
              property: password
